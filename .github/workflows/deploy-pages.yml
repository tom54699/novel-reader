name: Deploy to GitHub Pages

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Use corepack to respect packageManager field (pnpm@x)
      - name: Enable corepack
        run: corepack enable

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Detect package manager
        id: pm
        run: echo "pm=$(node -e "console.log((require('./package.json').packageManager||'').split('@')[0])")" >> $GITHUB_OUTPUT

      - name: Install deps (pnpm)
        if: steps.pm.outputs.pm == 'pnpm'
        run: pnpm install --frozen-lockfile

      - name: Install deps (yarn)
        if: steps.pm.outputs.pm == 'yarn'
        run: yarn install --frozen-lockfile

      - name: Install deps (npm)
        if: steps.pm.outputs.pm == ''
        run: npm ci

      - name: Compute BASE_URL
        id: baseurl
        run: |
          REPO_NAME="${{ github.event.repository.name }}"
          OWNER="${{ github.repository_owner }}"
          if [[ "$REPO_NAME" == "$OWNER.github.io" ]]; then
            echo "base=/" >> $GITHUB_OUTPUT
          else
            echo "base=/$REPO_NAME/" >> $GITHUB_OUTPUT
          fi

      - name: Build (pnpm)
        if: steps.pm.outputs.pm == 'pnpm'
        env:
          BASE_URL: ${{ steps.baseurl.outputs.base }}
        run: pnpm build

      - name: Build (yarn)
        if: steps.pm.outputs.pm == 'yarn'
        env:
          BASE_URL: ${{ steps.baseurl.outputs.base }}
        run: yarn build

      - name: Build (npm)
        if: steps.pm.outputs.pm == ''
        env:
          BASE_URL: ${{ steps.baseurl.outputs.base }}
        run: npm run build --if-present

      - name: SPA fallback (404.html)
        run: cp dist/index.html dist/404.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Pages
        id: deployment
        uses: actions/deploy-pages@v4
